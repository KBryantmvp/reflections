What happens when you initialize a repository? Why do you need to do it?
	It adds the .git file on the directory you initialize the repository.
	You need to do it if you want to create a repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	It is a temporary state.

How can you use the staging area to make sure you have one commit per logical change?
	Comparing with the most recent commit using "git diff --staged" command and the file in our working directory using "git diff".

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	When you want to modify your files but it is a modification you do not want to affect to the main branch. 

How do the diagrams help you visualize the branch structure?
	It is definitely clearer when trying to see the whole structure of your different branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	1. It incorporates the changes done in one branch into the other. 
	2. Because they become just one branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	With the automatic merging the process is much simpler, but the manual merging lets you know better the code to be modified by having to edit it or review it.